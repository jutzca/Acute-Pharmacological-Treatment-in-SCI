hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Days post injury"),
yaxis = list(title = "Numbers of unique drugs"))%>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
acute_pharmacol_management.by.indication.plot
return(acute_pharmacol_management.by.indication.plot)
}
plot <- fct_acute_pharmacol_management_by_indication_sygen()
plot
}
}) #close function
# Figure of drugs per patient (mean, max, min)
output$plot_pharmacol_management_ind_sygen <- renderPlotly({
if (input$pharmacol_management_sygen == "full_cohort_sygen"){ #full cohort selected
# Create color list
color_list <- c("#FFA500", "#EE6677", "#228833", "#4477AA", "#4B0082")
# Create plot
number.of.drug.perday.sygen.plot <- ggplot(acute_pharmacol_management.data.ind.sygen, aes(x=day, y=mean, color = ais1))+
geom_line(aes(x=day, y=mean, color=ais1), size=1)+
geom_ribbon(aes(ymin=min,ymax=max,fill=ais1),color="grey",alpha=0.4) +  theme_bw(base_size = 12, base_family = "Open Sans") + xlim(1,60) +
scale_fill_manual(values=color_list) + scale_color_manual(values=color_list) +
facet_wrap(.~ais1, ncol = 1)+
theme(legend.position="none", axis.text = element_text(color = 'black'),
axis.title = element_text(color = 'black'),
strip.text = element_text(color = 'black'))+
xlab('Days post injury')+ylab("")
number.of.drug.perday.sygen.plot
ggplotly(number.of.drug.perday.sygen.plot, tooltip=c("x", "y", 'min', "max"), height = 800, width=800)
}
})
# Table providing an overview of the drugs per day and indication (subgroups)
output$table_srgp <- renderDataTable({
if (input$pharmacol_management_sygen == "sbgrps_sygen"){
# Subset the data for selected age range
range = c(input$select_age_pharmacol_management_sbgrp_sygen[1] : input$select_age_pharmacol_management_sbgrp_sygen[2])
acute_pharmacol_management.data.sygen2 <- acute_pharmacol_management.data.sygen[acute_pharmacol_management.data.sygen$Age %in% range, ]
table.for.crosstalk <- acute_pharmacol_management.data.sygen2 %>%
dplyr::filter(Sex== input$select_sex_pharmacol_management_sbgrp_sygen &
ais1 == input$select_ais_pharmacol_management_sbgrp_sygen)%>%
#dplyr::filter(dose != 0)%>%
#dplyr::select(-"indication")%>%
dplyr::group_by(day_x, generic_name,indication)%>%
ungroup()%>%
dplyr::select(generic_name, day, indication)%>%
dplyr::distinct(generic_name,day,indication)%>%
dplyr::rename(Day=day)%>%
dplyr::rename(Indication=indication)%>%
dplyr::rename(`Drug name`=generic_name)%>%
datatable(rownames = FALSE)
}
})
# Overview figure of pharmacological management (customized subgroups)
output$plot_pharmacol_management_srgp_sygen <- renderPlotly({
if (input$pharmacol_management_sygen == "sbgrps_sygen"){ # subgroup selected
# Subset the data for selected age range
range = c(input$select_age_pharmacol_management_sbgrp_sygen[1] : input$select_age_pharmacol_management_sbgrp_sygen[2])
acute_pharmacol_management.data.sygen2 <- acute_pharmacol_management.data.sygen[acute_pharmacol_management.data.sygen$Age %in% range, ]
nr.of.patients.per.drug.per.day <- acute_pharmacol_management.data.sygen2 %>%
dplyr::filter(Sex == input$select_sex_pharmacol_management_sbgrp_sygen &
ais1 == input$select_ais_pharmacol_management_sbgrp_sygen)%>%
dplyr::filter(dose != 0)%>%
dplyr::select(-"indication")%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day
acute_pharmacol_management.plot<-nr.of.patients.per.drug.per.day%>%
plotly::highlight_key(~day)%>%
plotly::plot_ly(y = ~n,
x =  ~day)%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~0.9,
text = ~paste("Days post injury:", day,
'</br></br>', "Number of drugs:", n
),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Days post injury"),
yaxis = list(title = "Numbers of unique drugs"))%>%
plotly::highlight(on = "plotly_hover", off = "plotly_doubleclick")
}
})
# Overview figure of pharmacological management by indication (customized subgroups)
output$plot_pharmacol_management_by_indication_sgrp_sygen<-renderPlotly({
if (input$pharmacol_management_sygen == "sbgrps_sygen"){
# Subset the data for selected age range
range = c(input$select_age_pharmacol_management_sbgrp_sygen[1] : input$select_age_pharmacol_management_sbgrp_sygen[2])
acute_pharmacol_management.data.sygen2 <- acute_pharmacol_management.data.sygen[acute_pharmacol_management.data.sygen$Age %in% range, ]
fct_acute_pharmacol_management_by_indication_sygen<- function(day){
nr.of.patients.per.drug.per.day.per.indication <- acute_pharmacol_management.data.sygen2 %>%
dplyr::filter(Sex == input$select_sex_pharmacol_management_sbgrp_sygen &
ais1 == input$select_ais_pharmacol_management_sbgrp_sygen)%>%
dplyr::filter(indication == input$select_indication_pharmacol_management_sgrp_sygen)%>%
dplyr::filter(dose != 0)%>%
dplyr::group_by(day, generic_name, indication) %>%
dplyr::select(generic_name, day,indication)%>%
ungroup()%>%
dplyr::count(day,indication)%>%
dplyr::group_by(day,indication)
nr.of.patients.per.drug.per.day.per.indication
acute_pharmacol_management.by.indication.plot<-nr.of.patients.per.drug.per.day.per.indication%>%
highlight_key(~day)%>%
plotly::plot_ly(y = ~n,
x =  ~day)%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~0.9,
text = ~paste("Days post injury:", day,
'</br></br>', "Number of drugs:", n
),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Days post injury"),
yaxis = list(title = "Numbers of unique drugs"))%>%
highlight(on = "plotly_hover", off = "plotly_doubleclick")
acute_pharmacol_management.by.indication.plot
return(acute_pharmacol_management.by.indication.plot)
}
plot <- fct_acute_pharmacol_management_by_indication_sygen()
plot
}
}) #close function
#------- other -----------
shinyjs::onclick("menu",
shinyjs::toggle(id = "sideFooter", anim = F))
shiny:::flushReact()
}
# Run the application
shinyApp(ui = ui, server = server)
acute_pharmacol_management.data.sygen
#load original scirehab medication dataset
scirehab.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/drug_addep/masterfile/masterfile.csv", header = T, sep = ',')
names(scirehab.medication.data)
#-------------------------Calculate and visualize point prevalence of medication administration (i.e., number of medications administered per day per patient)-----------------
#Make copy of data file to work with
scirehab.medication.data.1 <- scirehab.medication.data
#Replace all values greater than 0 with a 1 and all na's will be replaced with a 0
scirehab.medication.data.2<-scirehab.medication.data.1 %>%
dplyr::mutate_if(is.numeric, ~1 * (. != 0)) %>%
dplyr::mutate_if(is.numeric, ~replace_na(., 0))
#change columns to numerics class format
# cols_to_change = c(4:6)
# for(i in cols_to_change){
#   aggregate(scirehab.medication.data.2[,i], by=list(Category=scirehab.medication.data.2$generic_name), FUN=sum)
# }
#Subset Data
scirehab.medication.data.2.subset <- scirehab.medication.data.2[c(2:63)]
#Aggregate data: Number of medications per day for each patient
new_tab_pid.scirehab<-aggregate(scirehab.medication.data.2.subset[-1], scirehab.medication.data.2["newid"], FUN=sum)
# Subset data according to PIDs
scirehab.pid <-read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/Demographics_injury_charact/rehab_summary_stats_patients_with_C0_to_L2_injuries.csv", sep = ',', header = T,  na.strings=c("","NA"))
new_tab_pid.scirehab.subset <- merge(scirehab.pid, new_tab_pid.scirehab, by.x = "newid",
by.y = "newid", all.x = TRUE, all.y = F)
#Reformat data from wide to long
new_tab_pid_long.scirehab <- gather(new_tab_pid.scirehab.subset, day, prevalence, X0:X60, factor_key=TRUE)
new_tab_pid_long.scirehab
#Add new column with prevalence measure: Number of subjetcs in addep dataset = 1243
new_tab_pid_long.scirehab$prevalence1 <- (new_tab_pid_long.scirehab$prevalence/1243)*100
#change columns 4:368 to numerics class format
cols_to_change = c(10:12)
for(i in cols_to_change){
class(new_tab_pid_long.scirehab[, i]) = "numeric"
}
##Replace 0s with 'NA'
new_tab_pid_long_withna.scirehab<- new_tab_pid_long.scirehab %>% replace_with_na(replace = list(prevalence = 0))
#Plot point prevalence
point.prevalence.scirehab <-ggplot(data=new_tab_pid_long_withna.scirehab, aes(x =day, y = newid, fill = prevalence)) +
viridis::scale_fill_viridis(name="Number of \nMedications Administered",
option = 'plasma',
direction = 1,
na.value = "white") +
geom_tile(color = 'white', size = 0.1) +
scale_x_continuous(expand = c(0, 0), breaks = c(0, 30,60)) +
ggtitle("SCI Rehab Study (n=1243)")+ labs(x="Days Post-Injury", y="")+ theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
axis.title.x = element_text(size = 10),
axis.text.x = element_text(color="black", size=8),
axis.ticks.y =element_blank(),
axis.text.y = element_blank(),
axis.title.y= element_blank())
point.prevalence.scirehab
#---------- Calculate and visualize the number of medications per day per patients  ----------
number.of.drug.perday.scirehab <- new_tab_pid_long.scirehab %>%
dplyr::group_by(day, AIS) %>%
dplyr::mutate(n = n(),
mean = mean(prevalence,na.rm=TRUE),
median = median(prevalence, na.rm=TRUE),
sd = sd(prevalence,na.rm=TRUE),
max = max(prevalence, na.rm=TRUE),
min = min(prevalence, na.rm=TRUE)
) %>%
dplyr::mutate(sem = sd / sqrt(n - 1),
CI_lower = mean + qt((1-0.95)/2, n - 1) * sem,
CI_upper = mean - qt((1-0.95)/2, n - 1) * sem)
number.of.drug.perday.scirehab
number.of.drug.perday.scirehab2 <- number.of.drug.perday.scirehab %>%
select(mean, median, sd, max, min, day, AIS) %>%
distinct() %>%
arrange(day)%>%
arrange(AIS)
number.of.drug.perday.scirehab2
number.of.drug.perday.scirehab <- new_tab_pid_long.scirehab %>%
dplyr::group_by(day, AIS) %>%
dplyr::mutate(n = n(),
mean = mean(prevalence,na.rm=TRUE),
median = median(prevalence, na.rm=TRUE),
sd = sd(prevalence,na.rm=TRUE),
max = max(prevalence, na.rm=TRUE),
min = min(prevalence, na.rm=TRUE)
) %>%
dplyr::mutate(sem = sd / sqrt(n - 1),
CI_lower = mean + qt((1-0.95)/2, n - 1) * sem,
CI_upper = mean - qt((1-0.95)/2, n - 1) * sem)
number.of.drug.perday.scirehab
number.of.drug.perday.scirehab <- new_tab_pid_long.scirehab %>%
dplyr::group_by(day, AIS) %>%
dplyr::mutate(n = n(),
mean = mean(prevalence,na.rm=TRUE),
median = median(prevalence, na.rm=TRUE),
sd = sd(prevalence,na.rm=TRUE),
max = max(prevalence, na.rm=TRUE),
min = min(prevalence, na.rm=TRUE)
)
number.of.drug.perday.scirehab
# Sygen pharmacological management
acute_pharmacol_management.data.sygen <-read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/masterfile/information.on.medication.for.shiny.csv", stringsAsFactors = F)
acute_pharmacol_management.data.sygen
new_tab_pid_long.scirehab
new_tab_pid_long_withna.extended
new_tab_pid_long.scirehab
scirehab.medication.data
#load original scirehab medication dataset
scirehab.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/drug_addep/masterfile/masterfile.csv", header = T, sep = ',')
names(scirehab.medication.data)
#Make copy of data file to work with
scirehab.medication.data.1 <- scirehab.medication.data
#Replace all values greater than 0 with a 1 and all na's will be replaced with a 0
scirehab.medication.data.2<-scirehab.medication.data.1 %>%
dplyr::mutate_if(is.numeric, ~1 * (. != 0)) %>%
dplyr::mutate_if(is.numeric, ~replace_na(., 0))
#Subset Data
scirehab.medication.data.2.subset <- scirehab.medication.data.2[c(2:63)]
scirehab.medication.data.2
#Subset Data
scirehab.medication.data.2.subset <- scirehab.medication.data.2[c(2:63)]
scirehab.medication.data.2.subset
#Aggregate data: Number of medications per day for each patient
new_tab_pid.scirehab<-aggregate(scirehab.medication.data.2.subset[-1], scirehab.medication.data.2["newid"], FUN=sum)
new_tab_pid.scirehab
scirehab.medication.data.2.subset
# Load original sygen medication dataset
sygen.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/masterfile/df_drugs_indication_per_day2.csv", header = T, sep = ',')
names(sygen.medication.data)
# Load original sygen medication dataset
sygen.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/masterfile/df_drugs_indication_per_day2.csv", header = T, sep = ',')
# Load original sygen medication dataset
sygen.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/masterfile/df_drugs_indication_per_day.csv", header = T, sep = ',')
names(sygen.medication.data)
# Make copy of data file to work with
sygen.medication.data.1 <- sygen.medication.data
# Replace all values greater than 0 with a 1 and all na's will be replaced with a 0
sygen.medication.data.2<-sygen.medication.data.1 %>%
dplyr::mutate_if(is.numeric, ~1 * (. != 0)) %>%
dplyr::mutate_if(is.numeric, ~replace_na(., 0))
# Subset Data
sygen.medication.data.2.subset <- sygen.medication.data.2[c(4:64)]
sygen.medication.data.2.subset
# Aggregate data: Number of medications per day for each patient
new_tab_pid<-aggregate(sygen.medication.data.2.subset[-1], sygen.medication.data.2["NEW_ID"], FUN=sum)
# Reformat data from wide to long
new_tab_pid_long <- gather(new_tab_pid, day, prevalence, X1:X60, factor_key=TRUE)
new_tab_pid_long
new_tab_pid_long_withna.extended
scirehab.medication.data.2.subset
scirehab.medication.data.2
#Subset Data
scirehab.medication.data.2.subset <- scirehab.medication.data.2[c(2:63)]
scirehab.medication.data.2.subset
new_tab_pid_long.scirehab <- gather(scirehab.medication.data.2.subset, day, prevalence, X1:X60, factor_key=TRUE)
new_tab_pid_long.scirehab
acute_pharmacol_management.data.sygen
# Load original scirehab medication dataset
scirehab.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/drug_addep/masterfile/masterfile.csv", header = T, sep = ',')
# Load original scirehab medication dataset
scirehab.medication.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/drug_addep/masterfile/masterfile.csv", header = T, sep = ',')
scirehab.medication.data
# Make copy of data file to work with
scirehab.medication.data.copy <- scirehab.medication.data
# Subset to first 60 days
scirehab.medication.data.subset<-scirehab.medication.data.copy[,c(1:63)]
scirehab.medication.data.subset
# Replace all values greater than 0 with a 1 and all na's will be replaced with a 0
scirehab.medication.data.subset.formatted<-scirehab.medication.data.subset %>%
mutate_if(is.numeric, ~1 * (. != 0)) %>%
mutate_if(is.numeric, ~replace_na(., 0))
# Create data file and plot figure
scirehab.medication.data.subset.formatted.final <- scirehab.medication.data.subset.formatted%>%
dplyr::mutate(total = rowSums(across(where(is.numeric))))%>%
select(c(1,2,64))%>%
mutate_if(is.numeric, ~1 * (. != 0))%>%
filter(total>0)%>%
count(generic_name) %>%
dplyr::arrange(-n)%>%
dplyr::distinct()%>%
top_n(20)%>%
as.data.frame()%>%
ggplot2::ggplot(aes(x=reorder(generic_name, n), y=n))+geom_bar(stat = 'identity', fill='black')+
coord_flip()+ylab("Number of Patients")+
geom_text(aes(label = round(n, 1)), vjust = 0.5,hjust = -0.2, size=3)+
theme_bw()+theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 10, color = 'black', family = 'Times'),
axis.text.x = element_text(size = 10, color = 'black', family = 'Times'),
axis.title.x = element_text(size = 12, color = 'black', family = 'Times'))
scirehab.medication.data.subset
scirehab.medication.data.subset.formatted
# Create data file and plot figure
scirehab.medication.data.subset.formatted.final <- scirehab.medication.data.subset.formatted%>%
dplyr::mutate(total = rowSums(across(where(is.numeric))))%>%
dplyr::select(c(1,2,64))%>%
dplyr::mutate_if(is.numeric, ~1 * (. != 0))%>%
filter(total>0)%>%
dplyr::count(generic_name) %>%
dplyr::arrange(-n)%>%
dplyr::distinct()%>%
top_n(20)%>%
as.data.frame()%>%
ggplot2::ggplot(aes(x=reorder(generic_name, n), y=n))+geom_bar(stat = 'identity', fill='black')+
coord_flip()+ylab("Number of Patients")+
geom_text(aes(label = round(n, 1)), vjust = 0.5,hjust = -0.2, size=3)+
theme_bw()+theme(axis.title.y = element_blank(),
axis.text.y = element_text(size = 10, color = 'black', family = 'Times'),
axis.text.x = element_text(size = 10, color = 'black', family = 'Times'),
axis.title.x = element_text(size = 12, color = 'black', family = 'Times'))
scirehab.medication.data.subset.formatted.final
scirehab.medication.data.subset.formatted.final <- scirehab.medication.data.subset.formatted%>%
dplyr::mutate(total = rowSums(across(where(is.numeric))))%>%
dplyr::select(c(1,2,64))%>%
dplyr::mutate_if(is.numeric, ~1 * (. != 0))%>%
filter(total>0)%>%
dplyr::count(generic_name) %>%
dplyr::arrange(-n)%>%
dplyr::distinct()%>%
top_n(20)%>%
as.data.frame()
scirehab.medication.data.subset.formatted.final
scirehab.medication.data.subset.formatted
scirehab.medication.data.subset.formatted
new_tab_pid_long <- gather(scirehab.medication.data.subset.formatted, day, prevalence, X1:X60, factor_key=TRUE)
new_tab_pid_long
new_tab_pid_long <- gather(scirehab.medication.data.subset.formatted, day, prevalence, X0:X60, factor_key=TRUE)
new_tab_pid_long
new_tab_pid_long <- gather(scirehab.medication.data.subset.formatted, day, prevalence, X0:X60, factor_key=TRUE)
new_tab_pid_long
scirehab.pid <-read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/Demographics_injury_charact/rehab_summary_stats_patients_with_C0_to_L2_injuries.csv", sep = ',', header = T,  na.strings=c("","NA"))
data1 <- merge(scirehab.pid, new_tab_pid_long, by.x = "newid",
by.y = "newid", all.x = TRUE, all.y = F)
data1
data1$NLI
table(data1$NLI)
data1
data1 %>%
dplyr::filter(prevalence != 0)
write.csv(data1,"/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/acute_pharmacol_management.scirehab.for_shiny.csv")
acute_pharmacol_management.data.scirehab <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/acute_pharmacol_management.scirehab.for_shiny.csv", stringsAsFactors = F)
data1
data1
data2<-data1 %>%
dplyr::filter(prevalence != 0)
data2
data2$day <- gsub("X", '', data2$day  )
data2$day
data2$day <-as.numeric(data2$day )
data2$day
data3 <- subset(data2, day <60)
data3
data2
data3
write.csv(data3,"/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/acute_pharmacol_management.scirehab.for_shiny.csv")
acute_pharmacol_management.data.scirehab <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Drug_addep/acute_pharmacol_management.scirehab.for_shiny.csv", stringsAsFactors = F)
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(prevalence)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid, prevalence)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(prevalence)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid, prevalence)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(prevalence)%>%
dplyr::group_by(prevalence)
nr.of.patients.per.drug.per.day.scirehab
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day, newid)
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
nr.of.patients.per.drug.per.day.scirehab
View(nr.of.patients.per.drug.per.day.scirehab)
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()
nr.of.patients.per.drug.per.day.scirehab <- acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()%>%
dplyr::arrange(day)%>%
ungroup()%>%
dplyr::count(day)%>%
dplyr::group_by(day)
nr.of.patients.per.drug.per.day.scirehab
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()%>%
dplyr::arrange(day)
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()%>%
dplyr::arrange(day)%>%
ungroup()
acute_pharmacol_management.data.scirehab %>%
dplyr::filter(prevalence != 0)%>%
dplyr::group_by(day, generic_name) %>%
dplyr::select(generic_name, day)%>%
dplyr::distinct()%>%
dplyr::arrange(day)%>%
ungroup()%>%
dplyr::count(day)
acute_pharmacol_management.plot<-nr.of.patients.per.drug.per.day.scirehab%>%
plotly::highlight_key(~day)%>%
plotly::plot_ly(y = ~n,
x =  ~day)%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~0.9,
text = ~paste("Days post injury:", day,
'</br></br>', "Number of drugs:", n
),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Days post injury"),
yaxis = list(title = "Numbers of unique drugs"))%>%
plotly::highlight(on = "plotly_hover", off = "plotly_doubleclick")
acute_pharmacol_management.plot
