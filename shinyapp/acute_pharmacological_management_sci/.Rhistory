" that enable visitors to directly interact with the PsyCorona data: ",
tags$ul(
tags$li("The cohort tab provides information on the patients that were enrolled in the",
a("Sygen clinical trial", onclick = "openTab('cohort_sygen')", href="#"), 'or',
a("SCIRehab study", onclick = "openTab('cohort_scirehab')", href="#"),
".")),
tags$ul(
tags$li("The ",
a("Data Sources", onclick = "openTab('scirehab')", href="#"),
"tab offers an insight into the diversity of our participants. We share compound information on some demographic variables, as well as the number of respondents in each country.
Please note that to protect the privacy and anonymity of our participants, data visualizations are only available for selections of more than 20 people."),
tags$li("The ",
a("Psychological Variables", onclick = "openTab('medication_scirehab')", href="#"),
" tab offers an interactive interface to explore the psychological variables we collect in the initiative's baseline survey.
This survey is open to anyone interested at",
tags$a(href="https://nyu.qualtrics.com/jfe/form/SV_6svo6J4NF7wE6tD",
target="_blank",
"tiny.cc/corona_survey"),
"and currently includes over 50 000 participants. You can explore psychological reactions to the coronavirus at five different levels:
(1) Governmental Response, (2) Community Response, (3) Cognitive Response, (4) Behavioral Response, as well as (5) Emotional Response.
Additionally, we offer a tool to explore the mean level relationship between different variables for different countries. Please note that to protect the
privacy and anonymity of our participants we only provide country-level visualizations once we have data for more than 20 people from any particular country."),
tags$li("The ",
a("Development", onclick = "openTab('medication_scirehab')", href="#"),
" tab gives you the possibility to interactively explore how different areas are evolving over time. This section is currently partly under
construction, but will be fully available soon.")
),
br(),
h4("Funding:"),
p('This project is supported by the ',
a('Swiss National Science Foundation', href = 'http://p3.snf.ch/project-186101', target="_blank"),
' (Ambizione Grant, #PZ00P3_186101), ',
a('Wings for Life Research Foundation', href = 'https://www.wingsforlife.com/en/', target="_blank"),
' (#2017_044), the ',
a('Craig H Neilsen', href = 'https://chnfoundation.org/', target="_blank"),
'.', align = "justify")
),
box(width = 4,
HTML("<a class=\"twitter-timeline\" data-height=\"600\" href=\"https://twitter.com/DatSci_4_health\">A Twitter List by FortuneMagazine</a> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>")
)
),
fluidRow(
valueBox(prettyNum(1895, big.mark=" ", scientific=FALSE), "Patients", icon = icon("user-edit"), width = 3, color = "purple"),
valueBox(prettyNum(770, big.mark=" ", scientific=FALSE), "Unique drugs", icon = icon("pills"), width = 3,  color = "purple"),
valueBox(tagList("10", tags$sup(style="font-size: 20px", "%")),
"Prophylactic drug use", icon = icon("prescription"),  width = 3,  color = "purple"
),
#valueBox(prettyNum(10, big.mark="", scientific=FALSE), "Prophylaxis", icon = icon("heartbeat"), width = 3,  color = "purple"),
valueBox("34", "Clinical sites", icon = icon("clinic-medical"), width = 3,  color = "purple")#,
#valueBox(404, "Something", icon = icon("project-diagram"), width = 3)
)
),
tabItem(tabName = "about_sygen",
h3(strong("The Sygen Clinical Trial")),
br(),
fluidRow(
box(#title = "Explore The Data",
width = 8,
heigth = "500px",
solidHeader = TRUE,
h4("Objectives of original study"),
"To determine efficacy and safety of monosialotetrahexosylganglioside GM1 (i.e., Sygen) in acute spinal cord injury.",
br(),
h4("Methods"),
strong("Monosialotetrahexosylganglioside GM1"),
"Sygen (monosialotetrahexosylganglioside GM1 sodium salt) is a naturally occurring compound in cell membranes of mammals and is especially abundant in the membranes of the central nervous system.
Acute neuroprotective and longer-term regenerative effects in multiple experimental models of ischemia and injury have been reported. The proposed mechanisms of action of GM1 include
anti-excitotoxic activity, apoptosis prevention, and potentiation of neuritic sprouting and the effects of nerve growth factors.",
br(),
br(),
strong("Study design."), "Randomized, double-blind, sequential,
multicenter clinical trial of two doses Sygen (i.e., low-dose GM-1: 300 mg intravenous loading dose followed by 100 mg/d x 56 days or high-dose GM-1:00 mg intravenous loading dose followed by 200 mg/d x 56 days) versus
placebo. All patients received the National Acute Spinal Cord Injury Study (NASCIS-2) protocol dosage of methylprednisolone. Based on a potential adverse interaction between concomitant MPSS and GM-1 administration,
the initial dose of GM-1 was delayed until after the steroids were given (mean onset of study medication, 54.9 hours).",
br(),
br(),
strong("Inclusion/exclusion criteria."), "For inclusion in Sygen, patients were required to have at least one lower extremity with a substantial motor deficit. Patients with spinal cord transection
or penetration were excluded, as were patients with a cauda equina, brachial or lumbosacral plexus, or peripheral nerve injury. Multiple trauma cases were included as long as they were not so severe
as to preclude neurologic evaluation. It is notable that this requirement of participating in a detailed neurologic exam excluded major head trauma cases and also intubated
chest trauma cases.",
br(),
br(),
strong("Assessments."), "Baseline neurologic assessment included both the AIS and detailed American Spinal Injury Association (ASIA) motor and
sensory examinations. Additionally, the Modified Benzel Classification and the ASIA motor and
sensory examinations were performed at 4, 8, 16, 26, and 52 weeks after injury. The Modified Benzel Classification was used for post-baseline measurement because it rates walking
ability and, in effect, subdivides the broad D category of the AIS. Because most patients have an unstable spinal fracture at
baseline, it is not possible to assess walking ability at that time; hence the use of different baseline and follow-up scales.
Marked recovery was defined as at least a two-grade equivalent improvement in the Modified Benzel Classification from the
baseline AIS. The primary efficacy assessment was the proportion of patients with marked recovery at week 26. The secondary efficacy assessments included the time course of marked recovery and
other established measures of spinal cord function (the ASIA motor and sensory scores, relative and absolute sensory levels of impairment, and assessments of bladder and bowel
function).",
br(),
br(),
strong("Concomitant medications."), "The use of medications delivered alongside the study medication (i.e., GM-1) was rigorously tracked.
For each concomitant medication administered during the trial, the dosage, reason for administration, and the timing of administration were recorded.",
br(),
br(),
strong("Results."), "Of 797 patients recruited, 760 were included in the analysis. The prospectively planned analysis at the prespecified endpoint time for all patients was negative.
The negative finding of the Sygen study is considered Class I Medical Evidence by the spinal cord injury Committee of the
American Association of Neurological Surgeons (AANS) and the Congress of Neurological Surgeons (CNS). Subsequent analyses of the Sygen
data have been performed to characterize the trajectory and extent of spontaneous recovery from acute spinal cord injury.",
br()
), # close box
fluidRow(
valueBox(prettyNum(797, big.mark=" ", scientific=FALSE), "Patients", icon = icon("user-edit"), width = 3, color = "purple"),
valueBox(prettyNum(489, big.mark=" ", scientific=FALSE), "Unique concomittant medication", icon = icon("pills"), width = 3,  color = "purple"),
valueBox(tagList("10", tags$sup(style="font-size: 20px", "%")),
"Prophylactic medication use", icon = icon("prescription"),  width = 3,  color = "purple"
),
#valueBox(prettyNum(10, big.mark="", scientific=FALSE), "Prophylaxis", icon = icon("heartbeat"), width = 3,  color = "purple"),
valueBox("28", "North American clinical sites", icon = icon("clinic-medical"), width = 3,  color = "purple"),
valueBox("1991-1997", "Running time", icon = icon("calendar-alt"), width = 3,  color = "purple")#,
#valueBox(404, "Something", icon = icon("project-diagram"), width = 3)
)
), # close fluid row
fluidRow(
box(#title = "Explore The Data",
width = 8,
heigth = "500px",
solidHeader = TRUE,
h4("References"),
tags$ul(
tags$li(a('Geisler et al, 2001', href = 'https://europepmc.org/article/med/11805612', target="_blank"), "Recruitment and early treatment in a multicenter study of acute spinal cord injury. Spine (Phila Pa 1976)."),
tags$li(a('Geisler et al, 2001', href = 'https://journals.lww.com/spinejournal/Fulltext/2001/12151/The_Sygen_R__Multicenter_Acute_Spinal_Cord_Injury.15.aspx', target="_blank"), "The Sygen multicenter acute spinal cord injury study. Spine (Phila Pa 1976)")
) # close tags
) # close box
) # close fluid row
), # close tab item
# Tab: Sygen Cohort
tabItem(tabName = "cohort_sygen",
# # Create alert
# shinyalert::useShinyalert(),
# h3("Description of Sygen Trial Cohort"),
# shinyBS::bsAlert("dataAlert"),
#
fluidRow(
box(width = 12,
div(style="display:inline-block;width:100%;text-align:center;",
radioGroupButtons(
inputId = "var",
label = "Patient characteristics:",
selected = "sex",
status = "success",
#justified = T, #if true, all boxes have the same length
individual = T, #if false, then the boxes are connected
choiceNames = c("Sex", "Age", "Injury Severity", "Injury Level", "Etiology"),
choiceValues = c("sex", "age", "baseline.ais", "nli", "etiology")
) # Close radioGroupButtons bracket
), # Close div bracket
div(plotlyOutput("bar.plot.baseline.characteristic.sygen", width = "50%",
height = "600px",
inline = FALSE), align='center')
) #close box bracket
)  #close fluid row
),   #close tabitem
tabItem(tabName = "about_scirehab",
h3(strong("Spinal Cord Injury Rehabilitation Study")),
br(),
fluidRow(
box(#title = "Explore The Data",
width = 8,
heigth = "300px",
solidHeader = TRUE,
h4("Objectives"),
"In an effort to understand the relationship between the rehabilitation process and outcomes, the SCIRehab study collected data about rehabilitation interventions across 7 disciplines during the inpatient rehabilitation of over 1200 people with spinal cord injury.
This study used practice-based evidence methods to relate the details of the rehabilitation process to outcomes after controlling for
individual demographic and injury characteristics",
br(),
h4("Methods"),
strong("Study design."), "Longitudinal, observational, prospective event-based cohort study.",
br(),
br(),
strong("Inclusion/ exlusion criteria."), "The SCIRehab facilities enrolled all patients who were 12 years of age or older, gave (or whose parent/guardian gave) informed consent, and were admitted to the facility's SCI unit for initial rehabilitation following traumatic SCI.
Duration of the acute-hospital inpatient admission preceding rehabilitation was not an enrollment criterion. Patients requiring transfer to acute care units or facilities during their rehabilitation program were retained in the study, no matter how long they spent in acute
care before returning to the rehabilitation unit, but their acute care days were not counted as part of the rehabilitation stay. To restrict the study to initial rehabilitation cases, a small number of patients were excluded who spent more than 2 weeks in another rehabilitation
center prior to admission to the SCIRehab facility. To ensure complete rehabilitation data, patients who spent more than a week of their rehabilitation stay on a non-spinal cord injury rehabilitation unit in the SCIRehab facility (staff of the non-SCI units were not trained in the data collection methods)
also were excluded. There were no other exclusion criteria.",
br(),
br(),
strong("Assessments."),
"Patients were followed for first year
post-injury and were excluded if they spent two or more weeks at a non-participating rehabilitation center. Patient demographics and injury characteristics were extracted from the patient medical record (part of the National Institute on Disability and Rehabilitation
Research Spinal Cord Injury Model Systems Form I). The International Standards of Neurological Classification of SCI (ISNCSCI) and its American Spinal Injury Association Impairment Scale (AIS) were used to describe the neurologic level and completeness of injury; the Functional Independence Measure (FIM)
served to describe a patient's functional independence in motor and cognitive tasks at admission and discharge, and monitor functional gains; and the Comprehensive Severity Index (CSI) was used to provide an overall summary measure of how ill (i.e., extent of deviation from normal)
a patient was over time during the stay in the center.",
br(),
br(),
strong("Commonly administered medications."), "The SCIRehab study rigorously tracked the use of all commonly administered medications. For each medication administered, route, dosage and dosing
(i.e., start and end date, frequency) were abstracted directly from medical records. However, medication indication was not recorded. The medication data has not been published."
), # close box
fluidRow(
valueBox(prettyNum(1225, big.mark=" ", scientific=FALSE), "Patients", icon = icon("user-edit"), width = 3, color = "purple"),
valueBox(prettyNum(575, big.mark=" ", scientific=FALSE), "Unique medications to treat secondary complications", icon = icon("pills"), width = 3,  color = "purple"),
#valueBox(prettyNum(10, big.mark="", scientific=FALSE), "Prophylaxis", icon = icon("heartbeat"), width = 3,  color = "purple"),
valueBox("6", "North American clinical sites", icon = icon("clinic-medical"), width = 3,  color = "purple"),
valueBox("2007-2010", "Running time", icon = icon("calendar-alt"), width = 3,  color = "purple")#,
#valueBox(404, "Something", icon = icon("project-diagram"), width = 3)
)
), # close fluid row
fluidRow(
box(#title = "Explore The Data",
width = 8,
heigth = "500px",
solidHeader = TRUE,
h4('Website'),
tags$a("ADDEP SCIRehab Data Source", href="https://www.icpsr.umich.edu/web/ADDEP/studies/36724",
target="_blank",
icon("external-link")),
h4("References"),
tags$ul(
tags$li(a('Whiteneck et al, 2009; ', href = 'https://pubmed.ncbi.nlm.nih.gov/19810627/', target="_blank"), "New approach to study the contents and outcomes of spinal cord injury rehabilitation: the SCIRehab Project. J Spinal Cord Med."),
tags$li(a('Whiteneck et al, 2011', href = 'https://pubmed.ncbi.nlm.nih.gov/21675353/', target="_blank"), "Inpatient treatment time across disciplines in spinal cord injury rehabilitation. J Spinal Cord Med")
) # close tags
) # close box
) # close fluid row
),
tabItem(tabName = "cohort_scirehab",
h3("Description of SCIRehab Study Cohort"),
fluidRow(
box(width = 12,
div(style="display:inline-block;width:100%;text-align:center;",
radioGroupButtons(
inputId = "var1",
label = "Patient characteristics:",
selected = "sex",
status = "success",
#justified = T, #if true, all boxes have the same length
individual = T, #if false, then the boxes are connected
choiceNames = c("Sex", "Age", "Injury Severity", "Injury Level", "Etiology"),
choiceValues = c("sex", "age", "baseline.ais", "nli", "etiology")
) #close box bracket
), #close divstyle
div(plotlyOutput("bar.plot.baseline.characteristic.scirehab", width = "50%",
height = "600px",
inline = FALSE), align='center')
) #close box bracket
) #close fluid row
), #close tabitem
tabItem(tabName = "abbreviations",
titlePanel(strong("Dictionary of abbreviations")),
fluidRow(
column(width = 6,
box(width = NULL, status = "primary",
h4(strong('General')),
p(strong('SCI'), 'spinal cord injury'),
p(strong(a('ASIA', href ="https://asia-spinalinjury.org/", target="_blank")), 'american spinal injury association'),
p(strong(a('EMSCI', href ="https://www.emsci.org/", target="_blank")), 'european multicenter study about spinal cord injury'),
p(strong('PBE'), 'practice-based evidence')
),
box(width = NULL, status = "primary",
h4(strong('Functional outcomes')),
p(strong(a('WISCI', href = "http://www.spinalcordcenter.org/research/wisci_guide.pdf", target="_blank")), 'walking index for spinal cord injury'),
p(strong(a('test_6min', href = "https://www.emsci.org/index.php/project/the-assessments/functional-test", target="_blank")), '6 minutes walking test'),
p(strong(a('test_10m', href = "https://www.emsci.org/index.php/project/the-assessments/functional-test", target="_blank")), '10 meters walking test'),
p(strong(a('TUG', href = "https://www.emsci.org/index.php/project/the-assessments/functional-test", target="_blank")), 'timed up and go test'),
p(strong(a('SCIM2', href = "https://www.emsci.org/index.php/project/the-assessments/independence", target="_blank")), 'spinal cord independence measure type 2'),
p(strong(a('SCIM3', href = "https://www.emsci.org/index.php/project/the-assessments/independence", target="_blank")), 'spinal cord independence measure type 3'),
p(strong('benzel'), 'modified benzel classification')
)
), # end column
column(width = 6,
box(width = NULL, status = "primary",
h4(strong(a('Neurological outcomes', href ="https://asia-spinalinjury.org/wp-content/uploads/2016/02/International_Stds_Diagram_Worksheet.pdf", target="_blank"))),
p(strong(a('AIS', href ='https://www.icf-casestudies.org/introduction/spinal-cord-injury-sci/american-spinal-injury-association-asia-impairment-scale#:~:text=The%20American%20Spinal%20Injury%20Association,both%20sides%20of%20the%20body', target="_blank")), 'ASIA impairment scale'),
p(strong('UEMS'), 'upper extremity motor score'),
p(strong('RUEMS'), 'right upper extremity motor score'),
p(strong('LUEMS'), 'left upper extremity motor score'),
p(strong('LEMS'), 'lower extremity motor score'),
p(strong('RLEMS'), 'right lower extremity motor score'),
p(strong('LLEMS'), 'left lower extremity motor score'),
p(strong('RMS'), 'right motor score'),
p(strong('LMS'), 'left motor score'),
p(strong('TMS'), 'total motor score'),
p(strong('RPP'), 'right pin prick'),
p(strong('LPP'), 'left pin prick'),
p(strong('TPP'), 'total pin prick'),
p(strong('RLT'), 'right light touch'),
p(strong('LLT'), 'left light touch'),
p(strong('TLT'), 'total light touch')
)
) # end column
) # end fluidRow
) # end tabItem
) # close tabitems
) # close dashboard body
) # close ui
server <- function(input, output, session) {
output$cohort <- renderMenu({
sidebarMenu(
menuItem("Cohort description", icon = icon("users"))
)
})
# Create Data Alert
createAlert(session = session,
anchorId = "dataAlert",
#alertId="a1",
title = paste(icon("warning"),"Data Notification"),
content="To protect the privacy of all patients, this application only uses aggregate, anonymized data (i.e., no individual person is identifiable).
For further information, see our <a href='#' onclick=\"openTab('data')\">data description section</a>.",
style = "warning")
# #------- Plot GM1----------
#   output$gm1 <- renderImage({
#     return(list(src = "/Users/jutzca/Documents/Github/Acute-Pharmacological-Treatment-in-SCI/shinyapp/acute_pharmacological_management_sci/www/gm1.png",
#                 type = "image/png",alt = "gm1", width = "200ptx"))
#   }, deleteFile = FALSE) #where the src is wherever you have the picture
#
#------- Plot baseline characteristics of Sygen patients ----------
output$bar.plot.baseline.characteristic.sygen <- renderPlotly({
if (input$var == "sex")  {
width = c(0.8, 0.8)
baseline.sex <- sygen_baseline%>%
dplyr::count(Sex)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/793*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~Sex,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width,
text = ~paste("Sex:", Sex,
'</br></br>', "N:", n,
'</br>', "Frequency:", frequency, '%'),
#text = ~n,
hoverinfo = "text")%>%
layout(title = '', font=list(size = 12)) %>%
layout(xaxis = list(title = 'Proportion [%]')) %>%
layout( xaxis = list(titlefont = list(size = 16), tickfont = list(size = 14)),
yaxis = list(titlefont = list(size = 16), tickfont = list(size = 14)) )
baseline.sex}
else if (input$var == "age")  {
width.age.group = c(0.8, 0.8, 0.8, 0.8)
sygen_baseline$agegroup=factor(sygen_baseline$agegroup, levels = c("60+ yrs", "41-60 yrs", "21-40 yrs", "0-20 yrs" ))
baseline.age.grp<- sygen_baseline%>%
dplyr::count(agegroup)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/793*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~ agegroup,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.age.group,
text = ~paste("Age Group:", agegroup,
'</br></br>', "N:", n,
'</br>', "Frequency:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Proportion [%]"),
yaxis = list(title = ""))
baseline.age.grp}
else if (input$var == "baseline.ais")  {
width.ais = c(0.8, 0.8, 0.8, 0.8, 0.8)
sygen_baseline$AIS=factor(sygen_baseline$AIS, levels = c('Unknown', "AIS D", 'AIS C', "AIS B", "AIS A"))
baseline.ais <- sygen_baseline%>%
dplyr::count(AIS)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/793*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~AIS,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.ais,
text = ~paste("Injury Severity:", AIS,
'</br></br>', "N:", n,
'</br>', "Frequency:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Proportion [%]"),
yaxis = list(title = ""))
baseline.ais}
else if (input$var == "nli")  {width.nli = c(0.8, 0.8)
sygen_baseline$NLI=factor(sygen_baseline$NLI, levels = c('Thoracic', "Cervical"))
baseline.nli <- sygen_baseline%>%
dplyr::count(NLI)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/793*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~NLI,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.nli,
text = ~paste("Injury Level:", NLI,
'</br></br>', "N:", n,
'</br>', "Frequency:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Proportion [%]"),
yaxis = list(title = ""))
baseline.nli}
else if (input$var == "etiology")  {
width.cause = c(0.8, 0.8, 0.8, 0.8,0.8, 0.8, 0.8, 0.8, 0.8)
sygen_baseline$Cause=factor(sygen_baseline$Cause, levels = c('Others', "Water related", "Pedestrian", "Other sports", "Motorcycle", "Gun shot wound", "Fall", "Blunt trauma", "Automobile" ))
baseline.cause<- sygen_baseline%>%
dplyr::count(Cause)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/793*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~Cause,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.cause,
text = ~paste("Etiology:", Cause,
'</br></br>', "N:", n,
'</br>', "Frequency:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Proportion [%]"),
yaxis = list(title = ""))
baseline.cause}
})
#------- Plot baseline characteristics of SCIRehab patients ----------
output$bar.plot.baseline.characteristic.scirehab <- renderPlotly({
if (input$var1 == "sex")  {
width = c(0.8, 0.8)
baseline.sex <- scirehab_baseline%>%
dplyr::count(Sex)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/1225*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~Sex,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width,
text = ~paste("Sex:", Sex,
'</br></br>', "N:", n,
'</br>', "Percentage:", frequency, '%'),
#text = ~n,
hoverinfo = "text")%>%
layout(title = '', font=list(size = 12)) %>%
layout(xaxis = list(title = 'Percentage [%]')) %>%
layout( xaxis = list(titlefont = list(size = 16), tickfont = list(size = 14)),
yaxis = list(titlefont = list(size = 16), tickfont = list(size = 14)) )
baseline.sex}
else if (input$var1 == "age")  {
width.age.group = c(0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8)
scirehab_baseline$Age=factor(scirehab_baseline$Age, levels = c("80+ yrs", "70-79 yrs", "60-69 yrs", "50-59 yrs", "40-49 yrs", "30-39 yrs", "20-29 yrs", "0-19 yrs" ))
baseline.age<- scirehab_baseline%>%
dplyr::count(Age)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/1225*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~ Age,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.age.group,
text = ~paste("Age Group:", Age,
'</br></br>', "N:", n,
'</br>', "Percentage:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Percentage [%]"),
yaxis = list(title = ""))
baseline.age}
else if (input$var1 == "baseline.ais")  {
width.ais = c(0.8, 0.8, 0.8, 0.8, 0.8)
scirehab_baseline$AIS=factor(scirehab_baseline$AIS, levels = c('Unknown', "AIS D", 'AIS C', "AIS B", "AIS A"))
baseline.ais <- scirehab_baseline%>%
dplyr::count(AIS)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/1225*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~AIS,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.ais,
text = ~paste("Injury Severity:", AIS,
'</br></br>', "N:", n,
'</br>', "Percentage:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Percentage [%]"),
yaxis = list(title = ""))
baseline.ais}
else if (input$var1 == "nli")  {
width.nli = c(0.8, 0.8, 0.8, 0.8)
scirehab_baseline$NLI=factor(scirehab_baseline$NLI, levels = c('Unknown',"Lumbar", 'Thoracic', "Cervical"))
baseline.nli <- scirehab_baseline%>%
dplyr::count(NLI)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/1225*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~NLI,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.nli,
text = ~paste("Injury Level:", NLI,
'</br></br>', "N:", n,
'</br>', "Percentage:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Percentage [%]"),
yaxis = list(title = ""))
baseline.nli}
else if (input$var1 == "etiology")  {
width.cause = c(0.8, 0.8, 0.8, 0.8,0.8, 0.8, 0.8, 0.8, 0.8)
scirehab_baseline$Cause=factor(scirehab_baseline$Cause, levels = c("Others", "Water related","Person-to-person contact", "Pedestrian", "Other sports", "Motorcycle", "Gun shot wound", "Fall", "Automobile" ))
baseline.cause<- scirehab_baseline%>%
dplyr::count(Cause)%>%
dplyr::mutate(frequency=sprintf("%0.1f", n/1225*100))%>%
as.data.frame()%>%
plotly::plot_ly(y = ~Cause,
x =  ~as.numeric(frequency))%>%
plotly::add_bars(
marker = list(color = 'rgb(96,92,168)'),
width = ~width.cause,
text = ~paste("Etiology:", Cause,
'</br></br>', "N:", n,
'</br>', "Percentage:", frequency, '%'),
hoverinfo = "text")%>%
plotly::layout(xaxis = list(title = "Percentage [%]"),
yaxis = list(title = ""))
baseline.cause}
})
#------- other -----------
shinyjs::onclick("menu",
shinyjs::toggle(id = "sideFooter", anim = F))
shiny:::flushReact()
}
# Run the application
shinyApp(ui = ui, server = server)
